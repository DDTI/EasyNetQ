<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0" DefaultTargets="Default">
<!-- GitVersionTask does not work using .NET CLI because it calls MSBuild
    Core rather than the full .NET Framework MSBuild.
    We need the GitVersionTask to properly version the assemblies, so we
    use the full .NET Framework MSBuild when calling EasyNetQ.proj: Line 46.

    Unfortunately, GitVersion_NuGetVersion is not propagated after exiting
    that MSBuild task, so we have to use the full .NET Framework MSBuild
    again with the .NET Core SDK to package a NuGet.

    NOTE: This does not currently work with Visual Studio 2017 Build Tools
    because it does not include the new NuGet targets, nor does it contain the
    .NET Core SDK.

    Related issues:
        * https://github.com/GitTools/GitVersion/issues/1175
        * https://github.com/Microsoft/msbuild/issues/1697
    -->
    <PropertyGroup>
        <BuildNumber>$(BUILD_BUILDID)</BuildNumber>
        <BaseDir>$(MSBuildProjectDirectory)\..</BaseDir>
        <OutputDir>$(BaseDir)\bin</OutputDir>
        <Tools>$(BaseDir)\Tools</Tools>
        <MSBuildCommunityTasksPath>$(Tools)\MSBuildCommunityTasks</MSBuildCommunityTasksPath>
        <Package>$(BaseDir)\Package</Package>
        <Source>$(BaseDir)\Source</Source>
    </PropertyGroup>

    <!-- Properties that are set during build to find test/merge binaries -->
    <PropertyGroup>
        <Configuration>Release</Configuration>
        <DesktopFrameworkVersion>net451</DesktopFrameworkVersion>
        <BinaryDesktopFolder>bin\$(Configuration)\$(DesktopFrameworkVersion)</BinaryDesktopFolder>
    </PropertyGroup>

    <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets"/>

    <Target Name="Default" DependsOnTargets="Version; Build; Package" />

    <Target Name="Version">
        <FileUpdate Files="$(Source)\Version.cs"
            Regex="AssemblyVersion\(&quot;(\d+)\.(\d+)\.(\d+)\.(\d+)&quot;\)"
            ReplacementText="AssemblyVersion(&quot;$1.$2.$3.$(BuildNumber)&quot;)" />
    </Target>

    <ItemGroup>
        <ProjectToBuild Include="$(Source)\EasyNetQ.sln">
            <Properties>Configuration=$(Configuration)</Properties>
        </ProjectToBuild>
    </ItemGroup>

    <!-- Restore all packages in solution -->
    <Target Name="Restore" DependsOnTargets="Version">
        <Exec WorkingDirectory="$(Source)" Command="dotnet restore %(ProjectToBuild.FullName)" />
    </Target>

    <!-- MSBuild only occurs after restore and version. -->
    <Target Name="Build" DependsOnTargets="Version; Restore">
        <MSBuild Projects="@(ProjectToBuild)" Targets="Rebuild"/>
    </Target>
    <!-- Test all projects against their targeted frameworks. Only tests that
        are not Integration or Explicit tests. -->
    

    <!-- Packaging -->
    <Target Name="Package" DependsOnTargets="Build">
        <PropertyGroup>
            <NuGetPackageDirectory>$(Package)</NuGetPackageDirectory>
        </PropertyGroup>
        <ItemGroup>
            <ClientLibraries Include="$(Source)\EasyNetQ\EasyNetQ.csproj" />
            <ClientLibraries Include="$(Source)\EasyNetQ.DI.*\EasyNetQ.DI.*.csproj" Exclude="$(Source)\*Tests*\*.csproj" />
            <ClientLibraries Include="$(Source)\EasyNetQ.Serilog\EasyNetQ.Serilog.csproj" />

            <FilesToDelete Include="$(NuGetPackageDirectory)\*.nupkg" />
        </ItemGroup>

        <MakeDir Directories="$(NuGetPackageDirectory)" Condition="!Exists('$(NuGetPackageDirectory)')" />
        <Delete Files="@(FilesToDelete)" />
        <MSBuild Projects="@(ClientLibraries)" Targets="Pack" Properties="Configuration=$(Configuration);PackageOutputPath=$(NuGetPackageDirectory)" />
  
  
    <!--<Delete Files="@(FilesToDelete)" />

    <Copy SourceFiles="$(OutputDir)\EasyNetQ.DI.Autofac.dll" DestinationFolder="$(Package)\EasyNetQ.DI.Autofac\lib\net40" />

    <GetAssemblyIdentity AssemblyFiles="$(OutputDir)\EasyNetQ.DI.Autofac.dll">
      <Output TaskParameter="Assemblies" ItemName="AsmInfo" />
    </GetAssemblyIdentity>

    <XmlUpdate
        Namespace="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd"
        XmlFileName="$(Package)\EasyNetQ.Di.Autofac\EasyNetQ.Di.Autofac.nuspec"
        XPath="/package/metadata/version"
        Value="%(AsmInfo.Version)" />

    <XmlUpdate
        Namespace="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd"
        XmlFileName="$(Package)\EasyNetQ.Di.Autofac\EasyNetQ.Di.Autofac.nuspec"
        XPath="/package/metadata/dependencies/dependency[@id='EasyNetQ']/@version"
        Value="%(AsmInfo.Version)" />

    <Exec WorkingDirectory="$(Package)\EasyNetQ.DI.Autofac" Command="$(NuGet)\NuGet.exe pack $(Package)\EasyNetQ.DI.Autofac\EasyNetQ.DI.Autofac.nuspec" />-->

 </Target>
  
</Project>
